name: CI/CD Pipeline for Full Stack Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Client Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install
        working-directory: ./client

      - name: Run tests with coverage
        run: npm test -- --coverage
        working-directory: ./client

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: uno791/local-artisan-marketplace
          directory: ./client/coverage

  deploy_static:
    name: Deploy Static Web App
    needs: test
    runs-on: ubuntu-latest
    if: ${{ needs.test.result == 'success' }}
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Build and Deploy Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_CALM_MEADOW_0FBB07C03 }}
          action: "upload"
          app_location: "./client"
          api_location: ""
          app_artifact_location: "dist"

  deploy_server:
    name: Deploy Node.js API Server
    needs: deploy_static
    runs-on: ubuntu-latest
    if: ${{ needs.deploy_static.result == 'success' }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: Install dependencies & build
        working-directory: server
        run: |
          npm install
          npm run build --if-present

      - name: Zip build output
        run: |
          cd server
          zip -r ../release.zip .

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_334AA9FF7E8E4FB9BC043DDC768BB897 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C5B9662CFB964D0186E0D4BCF83307AB }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_674A6760FA0C4B3D849AA2215344EE0A }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "artisan-api-server1"
          slot-name: "Production"
          package: release.zip
