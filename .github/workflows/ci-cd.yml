name: Full CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, closed]

jobs:
  run_tests:
    name: Run Client Tests and Upload Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install
        working-directory: ./client

      - name: Run tests with coverage
        run: npm test -- --coverage
        working-directory: ./client

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: uno791/local-artisan-marketplace
          directory: ./client/coverage

  deploy_server:
    name: Deploy Node API to Azure App Service
    runs-on: ubuntu-latest
    needs: run_tests # only run if tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: Install dependencies & build
        working-directory: server
        run: |
          npm install
          npm run build --if-present
          npm run test || echo "No tests configured"

      - name: Zip build output
        run: |
          cd server
          zip -r ../release.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_334AA9FF7E8E4FB9BC043DDC768BB897 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_C5B9662CFB964D0186E0D4BCF83307AB }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_674A6760FA0C4B3D849AA2215344EE0A }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "artisan-api-server1"
          slot-name: "Production"
          package: .

  deploy_static_web:
    name: Deploy Client to Azure Static Web Apps
    runs-on: ubuntu-latest
    needs: run_tests # only run if tests pass

    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      - name: Build And Deploy Static Web App
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_CALM_MEADOW_0FBB07C03 }}
          action: "upload"
          app_location: "./client"
          api_location: ""
          app_artifact_location: "dist"
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_static_pr:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request for Static Web App

    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
